on:
  push:
    branches:
      - master
    paths:
      - 'order-item-api/**'

name: Build/Deploy new Revision
env:
  DOCKER_ROOT_IMAGE_NAME: order-item-api:${{github.sha}}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}/order-item-api:${{github.sha}}
  REGION: ${{ secrets.REGION }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}

defaults:
  run:
    working-directory: order-item-api

jobs:
  running-tests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: install dependencies
        run: npm ci

      - name: run unity tests
        run: npm t
    
  build:
    needs: [running-tests]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup google cloud sdk
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS_PIPELINE }}

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: authorize docker push
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: build image
        run: docker build -t ${{env.DOCKER_ROOT_IMAGE_NAME}} .

      - name: tag image
        run: docker tag ${{env.DOCKER_ROOT_IMAGE_NAME}} ${{env.DOCKER_IMAGE_NAME}}

      - name: push image
        run: docker push ${{env.DOCKER_IMAGE_NAME}}

  # deploy-revision:
  #     needs: [build]
  #     runs-on: ubuntu-latest
  #     environment: production
  #     env:
  #       TF_VAR_service_account_client_email: ${{ secrets.SERVICE_ACCOUNT_CLIENT_EMAIL }}
  #       TF_VAR_service_account_private_key: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
  #       TF_VAR_container_registry_docker_image: 
  #       TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
  #       GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_PIPELINE }}

  #     defaults:
  #       run:
  #         shell: bash
  #         working-directory: api-jwt-generator/terraform

  #     steps:

  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         cli_config_credentials_hostname: app.terraform.io
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          
  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Validate
  #       run: terraform validate
        
  #     - name: Terraform Format
  #       run: terraform fmt && terraform fmt -check

  #     - name: Terraform Plan
  #       run: terraform plan

  #     - name: Terraform Apply
  #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #       run: terraform apply -auto-approve